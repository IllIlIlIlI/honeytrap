/*
* Honeytrap
* Copyright (C) 2016-2018 DutchSec (https://dutchsec.com/)
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See https://honeytrap.io/ for more details. All requests should be sent to
* licensing@honeytrap.io
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* Honeytrap" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by Honeytrap" and retain the original copyright notice.
 */
// Code generated by protoc-gen-go.
// source: protocol.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	protocol.proto

It has these top-level messages:
	PingMessage
	PayloadMessage
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type PingMessage struct {
	Token            *string `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	LocalAddress     *string `protobuf:"bytes,2,req,name=localAddress" json:"localAddress,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PingMessage) Reset()         { *m = PingMessage{} }
func (m *PingMessage) String() string { return proto.CompactTextString(m) }
func (*PingMessage) ProtoMessage()    {}

func (m *PingMessage) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *PingMessage) GetLocalAddress() string {
	if m != nil && m.LocalAddress != nil {
		return *m.LocalAddress
	}
	return ""
}

type PayloadMessage struct {
	Token            *string `protobuf:"bytes,1,req,name=token" json:"token,omitempty"`
	LocalAddress     *string `protobuf:"bytes,2,req,name=localAddress" json:"localAddress,omitempty"`
	RemoteAddress    *string `protobuf:"bytes,3,req,name=remoteAddress" json:"remoteAddress,omitempty"`
	Protocol         *string `protobuf:"bytes,4,req,name=protocol" json:"protocol,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PayloadMessage) Reset()         { *m = PayloadMessage{} }
func (m *PayloadMessage) String() string { return proto.CompactTextString(m) }
func (*PayloadMessage) ProtoMessage()    {}

func (m *PayloadMessage) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *PayloadMessage) GetLocalAddress() string {
	if m != nil && m.LocalAddress != nil {
		return *m.LocalAddress
	}
	return ""
}

func (m *PayloadMessage) GetRemoteAddress() string {
	if m != nil && m.RemoteAddress != nil {
		return *m.RemoteAddress
	}
	return ""
}

func (m *PayloadMessage) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}
